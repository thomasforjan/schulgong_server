buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.11.0'
    classpath 'com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.13'
  }
}

plugins {
	id 'java'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.spotbugs' version '5.0.13'
	id 'com.diffplug.spotless' version '6.11.0'
}

group = 'at.fhburgenland'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'com.github.spotbugs'
  apply plugin: 'com.diffplug.spotless'

  repositories {
    mavenCentral()
  }

  dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.3'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
  }

  spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    visitors = ['FindSqlInjection', 'SwitchFallthrough']
    omitVisitors = ['FindNonShortCircuit']
    reportsDir = file("$buildDir/spotbugs")
    excludeFilter = file("build.gradle")
  }

  spotless {
    // optional: limit format enforcement to just the files changed by this feature branch
    ratchetFrom 'origin/main'

    format 'misc', {
      // define the files to apply `misc` to
      target '*.gradle', '*.md', '.gitignore'
      // define the steps to apply to those files
      trimTrailingWhitespace()
      indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
      endWithNewline()
    }
    java {
      target 'src/*/java/**/*.java'
      googleJavaFormat('1.15.0').aosp().reflowLongStrings().groupArtifact('com.google.googlejavaformat:google-java-format')
      formatAnnotations()
    }
  }
}

  tasks.named('test') {
    useJUnitPlatform()
  }
